server:
  port: 8001

spring:
  datasource:
    hikari:
      connection-timeout: 10000
      maximum-pool-size: ${HIKARI_MAXIMUM_POOL_SIZE:10}
      minimum-idle: 1
      idle-timeout: 10000
    type: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_URL:localhost}/${POSTGRES_DB:postgres}?currentSchema=brokerage_provider
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_CONSUMER_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: mb
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: ${KAFKA_PRODUCER_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      topic1: orders

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false

  flyway:
    enabled: true
    baseline-version: 0
    baseline-on-migrate: true
    table: schema_version
    validate-on-migrate: false

  jackson:
    default-property-inclusion: non_null
    serialization:
      indent-output: true

  threads:
    virtual:
      enabled: true

  docker:
    compose:
      enabled: true

management:
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "health,metrics,prometheus"
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"